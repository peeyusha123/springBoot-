elect SITE_PROJECTS_ID as REF_NUM,REF_TYPE,EVENT_ID, EVENTS_TITLE, EMAIL_REQUIRED,EXTERNAL_ACCESS,IS_REOPENED,EVENT_GROUP_ID, EVENT_TYPE_ID, EVENT_STATUS, USER_DESCRIPTION, 
CREATED_DATE, CREATED_BY,CREATED_BY_VZID, DECODE(:USER_ID:,CREATED_BY_VZID,'true','false') as IS_CREATOR, LAST_MODIFIED_BY, LAST_MODIFIED_BY_VZID,
ASSIGNEE_REVIEWER, ASSIGNEE_REVIEWER_VZID,LAST_MODIFIED_DATE, GROUP_NAME,GROUP_CODE, EVENT_TYPE, ASSIGNEE, ASSIGNER, ASSIGNED_DATE, TARGETED_DATE,FORECAST_DATE, COMPLETED_DATE, ASSIGNEE_VZID, 
ASSIGNER_VZID,DAYS_TO_TARGET, DECODE (DAYS_TO_FORECAST,NULL,0,DAYS_TO_FORECAST), ASSIGNEE_TYPE,ROLE_ASSIGNEE,
case when (DAYS_TO_FORECAST IS NOT NULL AND (DAYS_TO_TARGET < 7 AND DAYS_TO_FORECAST < 7)) AND EVENT_STATUS <> 'Completed' then 'background-salmon'
     when (DAYS_TO_FORECAST IS NULL AND DAYS_TO_TARGET < 7 ) AND EVENT_STATUS <> 'Completed' then 'background-salmon'  
     when (DAYS_TO_FORECAST IS NOT NULL AND DAYS_TO_TARGET >= 7 and DAYS_TO_TARGET < 15) AND (DAYS_TO_FORECAST >= 7 and DAYS_TO_FORECAST < 15) AND EVENT_STATUS <> 'Completed' then 'background-orange' 
	 when (DAYS_TO_FORECAST IS NULL AND (DAYS_TO_TARGET >= 7 and DAYS_TO_TARGET < 15))  AND EVENT_STATUS <> 'Completed' then 'background-orange' 
     when (DAYS_TO_FORECAST IS NOT NULL AND DAYS_TO_TARGET >= 15 AND DAYS_TO_FORECAST >= 15) AND EVENT_STATUS = 'Completed' then 'background-teal' 
	 when (DAYS_TO_FORECAST IS NULL AND DAYS_TO_TARGET >= 15 ) AND EVENT_STATUS = 'Completed' then 'background-teal'  
     else '' end as ROW_BACKGROUND,NAME,TYPE,NVL(SR_NAME,'N/A') as SR_NAME,NVL(SITE_NAME,'N/A') as SITE_NAME , DL_ASSIGNEE_ID, DL_ASSIGNEE_NAME, UNIQUE_IDENTIFIER  
 from ( 
SELECT ESPM.SITE_PROJECTS_ID,'PROJECTS' as REF_TYPE,E.EVENT_ID,E.EVENTS_TITLE,E.EMAIL_REQUIRED,E.EXTERNAL_ACCESS,E.IS_REOPENED, E.EVENT_GROUP_ID,E.EVENT_TYPE_ID,E.EVENT_STATUS,E.USER_DESCRIPTION,
 E.CREATED_DATE ,
  (SU5.LAST_NAME || ', ' || SU5.FIRST_NAME) as CREATED_BY, SU5.USER_ID as CREATED_BY_VZID,
  (SU3.LAST_NAME || ', ' || SU3.FIRST_NAME) as LAST_MODIFIED_BY, SU3.USER_ID as LAST_MODIFIED_BY_VZID, 
  (SU4.LAST_NAME || ', ' || SU4.FIRST_NAME) as ASSIGNEE_REVIEWER, SU4.USER_ID as ASSIGNEE_REVIEWER_VZID,
  E.LAST_MODIFIED_DATE,EG.GROUP_NAME,EG.GROUP_CODE, ET.EVENT_TYPE, (SU1.LAST_NAME || ', ' || SU1.FIRST_NAME) as ASSIGNEE, 
  (SU2.LAST_NAME || ', ' || SU2.FIRST_NAME) as ASSIGNER, 
  to_char(EA.ASSIGNED_DATE,'MM/DD/YYYY') as ASSIGNED_DATE, 
  to_char(E.TARGETED_DATE,'MM/DD/YYYY') as TARGETED_DATE, 
  to_char(E.FORECAST_DATE,'MM/DD/YYYY') as FORECAST_DATE, 
  to_char(E.COMPLETED_DATE,'MM/DD/YYYY') as COMPLETED_DATE,
  FLOOR( (E.TARGETED_DATE) - sysdate) AS DAYS_TO_TARGET,
  FLOOR( (E.FORECAST_DATE) - sysdate) AS DAYS_TO_FORECAST,
SU1.USER_ID as ASSIGNEE_VZID, SU2.USER_ID as ASSIGNER_VZID,SP.NAME,SP.TYPE ,SP.SR_NAME,SP.SITE_NAME,EA.ASSIGNEE_TYPE,EA.ROLE_ASSIGNEE,
DL_ASSIGNEE AS DL_ASSIGNEE_ID,(SELECT DISTRIBUTION_LIST_NAME
FROM DISTRIBUTION_LISTS WHERE DISTRIBUTION_LIST_ID = DL_ASSIGNEE) AS DL_ASSIGNEE_NAME,
E.UNIQUE_IDENTIFIER AS UNIQUE_IDENTIFIER
FROM EVENTS E 
inner join EVENT_SITE_PROJECTS_MAPPING ESPM on ESPM.EVENT_ID = E.EVENT_ID
left outer join ( select SP1.NAME,SP1.TYPE,SP1.SITE_PROJECTS_ID ,PS.SR_NAME,SI.SITE_NAME
                  from SITE_PROJECTS SP1
                  LEFT OUTER join PROJ_SARF PS ON  PS.SITE_PROJECTS_ID  = SP1.SITE_PROJECTS_ID
                  LEFT OUTER JOIN ( SELECT SPM.SITE_PROJECTS_ID,S.SITE_INFO_ID,S.SITE_NAME
                                    FROM SITE_PROJECTS_MAP SPM,SITE_INFO S
                                    WHERE  SPM.SITE_INFO_ID = S.SITE_INFO_ID
                                    AND ( S.STATUS IN ('Live','Primary')  or S.STATUS is null)
                  ) SI ON SI.SITE_PROJECTS_ID = SP1.SITE_PROJECTS_ID
                  WHERE 1 = 1 
				  <IF> :SITE_PROJECTS_ID: != 0 &&:SITE_PROJECTS_ID: != null <THEN> and SP1.SITE_PROJECTS_ID = :!SITE_PROJECTS_ID:<ENDIF>
                  ) SP  on SP.SITE_PROJECTS_ID = ESPM.SITE_PROJECTS_ID
inner join EVENTS_ASSIGNMENT EA             on EA.EVENT_ID = E.EVENT_ID
inner join EVENT_TYPES ET                   on ET.EVENT_TYPE_ID = E.EVENT_TYPE_ID
inner join EVENT_GROUPS EG                  on EG.EVENT_GROUP_ID = E.EVENT_GROUP_ID
left outer join SEC_USERS SU1                    on EA.ASSIGNEE = SU1.USER_ID
inner join SEC_USERS SU2                    on EA.ASSIGNER = SU2.USER_ID
inner join SEC_USERS SU3                    on E.LAST_MODIFIED_BY = SU3.USER_ID
left outer join SEC_USERS SU4                    on EA.ASSIGNEE_REVIEWER = SU4.USER_ID
inner join SEC_USERS SU5                   on E.CREATED_BY = SU5.USER_ID

WHERE E.EVENT_STATUS NOT IN ('Deleted','temporary delete')
<IF> :SITE_PROJECTS_ID: != 0 &&:SITE_PROJECTS_ID: != null <THEN> and ESPM.SITE_PROJECTS_ID = :!SITE_PROJECTS_ID:<ENDIF>
<IF> :REF_NUM: != 0 &&:REF_NUM: != null <THEN> and E.EVENT_ID = :!REF_NUM:<ENDIF>

<IF> :GROUP_CODE: != '' &&:GROUP_CODE: != null <THEN> and EG.GROUP_CODE = :GROUP_CODE: <ENDIF> 
<IF> :EVENT_ID: != 0 &&:EVENT_ID: != null <THEN> and E.EVENT_ID = :EVENT_ID: <ENDIF>
)
    
    fv